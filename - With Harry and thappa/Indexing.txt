Harry:

vid 1: normal install react . (npx create-react-app name)

vid 2: File structure

vid 3: JS only for react

vid 4: Intro of JSX

         In react fregment we can write with a div tag or with aray t5hrid barckets using coma , and in other hand 
          we can use react fregmant like this <react.Fragment>...<React.Fragment/>
          and more short we can use this also <></>
      
vid 5: setup bootstrap -> from the intro page of bootstrap site first we need to add script and css link
                          Then we can make our components using boostrap

vid 6: Props and propTypes
-> simply send props like <div name="hello">
    in take page function(props){ console.log(props.name);}
    similarly if there are many props we can do a dextructuring to ignore to write long names like props.name instead of names using
    const {name}=props;

now we can create a check that calls proptypes so we can pass proper datatype
1> import import PropTypes from 'prop-types'
2> intialize check in the end
    function-name.propTypes= {name: PropTypes.string (we can use .isrequired here bcz if dont sent props then it through an error)
                              Id: PropTypes.number}
Like this. :)

Now if we didn't send props we can make a deafult props like this in the end
function_name.default={title: "hello boss",
                       id: 1478}

vid 7: State and handling events

       State means current situation of thet thing

       We use useState hook here: 
       1> import {useState} from 'react 
       2> const [text, useText] = useState('hello);  
Now if we want to change the state then we use setText function 

NB: in setText we can use it the value of that box will change and when we use unchange we can get an extra argumtn name 'event' and we can write anything usually 'event.target.value', when that onchange function call

vid 8, 9, 10, 11-Add other logics 

vid 12: Darkmode (Using use state)

vid 13: add a logic of copy text from something

vid 14: set darkmode for page
        Basically here we can send use state data from one component to other
        Use ternary operator
       
        Use advance &&
        Upgrade alart
        
        make different types of darkmode challemge given
        No words count 1 bug fix

vid 15: titlechange dynamically and favicons change
        favicon-> .ico file

vid 16: Router
        i> npm install react-router-dom
        ii> browserRouter,switch,route,link import
        iii> use link and to in anchor tag
        iv> use exact keyword

vid 17: deployments in github(nuormally react router not good for github for deploying)

vid 18: hosting in vps

vid 20,21: Fixing problem

vid 22: Start class base component 
        inthat case we need to import react , {Component} from 'react';
     
         syntax:  export react class App extends Components{
                      render(){ return( <div> hello World</div>)
                           }}

 always need to use {this.variable_name}

Vid 23: Component structure of second application and use it make nav and news component

Vid 24: Fetching API key
        using props

vid 25: understanding State,constructor and super keyword

vid 26: looping through an array using jsx
 
                                






Thappa:
Vid 1-13 simple and intro type

vid 14: attributesd like className, contentEditable, link, htmlfor etc

Vid 15-18: css 

vid 19,20,21: Component, import, export 
vid  22: calculator
vid 23:props
vid 24,25,26,27:array map    
      > Make a data that is array of objects also add a unique key // when we send props maybe key not need but we need to send it during map function
      > export and import it 
      > array_name.map((val)=>{                        [parameters in array map-> value,index,which array]
                     return( <components/>)})  // write this map function in curly brases bcz we write in under syntactical suger
vid 28: React Dev tools (chrome extention)
vid 29:If-else statement
vid 30: ternary operator
vid 31,32: slot machine game, emoji attach
Vid 33: Hooks
vid 34,35: clocks
Vid 36: Events
